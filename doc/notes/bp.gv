digraph summary{
		size="7,10.5";
                usercommand [label="User selects command", shape=box, style=filled, fillcolor=palegreen]
                sendheader [label="Client sends command header"]
                svrrequest [label="Server sends acknowledgement"]
		clientwait [label="Client waits"] 
                svrloop [label="Server sends request"]
		clientaction [label="Client performs request"] 
		clientrespond [label="Client signals request"] 

                usercommand->sendheader
                sendheader->svrrequest [label="test"]
		clientsend->svrrequest
}		

digraph {
    graph [rankdir=LR] // left-right layout, not top-down
    a [shape=square, fontcolor=white, style=filled, fillcolor=blue]
    b [shape=triangle, fontcolor=white, style=filled,
       fillcolor=red, peripheries=3]
    c [style=invis]
    a -> b [style=bold, color=red, label="to b"]
    b -> a [style=dashed, color=blue, label="to a"]
    a -> c [style=dotted, label="?"]
}

digraph finite_state_machine {
	rankdir=LR;
	size="8,5"
	node [shape = doublecircle]; LR_0 LR_3 LR_4 LR_8;
	node [shape = circle];
	LR_0 -> LR_2 [ label = "SS(B)" ];
	LR_0 -> LR_1 [ label = "SS(S)" ];
	LR_1 -> LR_3 [ label = "S($end)" ];
	LR_2 -> LR_6 [ label = "SS(b)" ];
	LR_2 -> LR_5 [ label = "SS(a)" ];
	LR_2 -> LR_4 [ label = "S(A)" ];
	LR_5 -> LR_7 [ label = "S(b)" ];
	LR_5 -> LR_5 [ label = "S(a)" ];
	LR_6 -> LR_6 [ label = "S(b)" ];
	LR_6 -> LR_5 [ label = "S(a)" ];
	LR_7 -> LR_8 [ label = "S(b)" ];
	LR_7 -> LR_5 [ label = "S(a)" ];
	LR_8 -> LR_6 [ label = "S(b)" ];
	LR_8 -> LR_5 [ label = "S(a)" ];
}
